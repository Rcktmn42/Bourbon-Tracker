{
  "info": {
    "name": "NC Bourbon Tracker â€“ Dev",
    "_postman_id": "8f21f8a4-0b7b-4767-9c76-3f0f5b6f3c11",
    "description": "Smoke tests for auth, profile, and admin endpoints. Uses cookie-based auth set by /api/auth/login.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Health",
      "item": [
        {
          "name": "GET /health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status is 200', () => pm.response.to.have.status(200));",
                  "pm.test('Has JSON status', () => pm.expect(pm.response.json().status).to.exist);"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Auth (User)",
      "item": [
        {
          "name": "POST /api/auth/register (User)",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"first_name\": \"Test\",\n  \"last_name\": \"User\",\n  \"email\": \"{{test_email}}\",\n  \"password\": \"{{test_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "register"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const code = pm.response.code;",
                  "pm.test('Status 201 (created) or 409 (already exists)', () => pm.expect([201,409]).to.include(code));",
                  "if (code === 201) {",
                  "  const json = pm.response.json();",
                  "  if (json && json.user_id) pm.environment.set('user_id', json.user_id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "POST /api/auth/login (User)",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{test_email}}\",\n  \"password\": \"{{test_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status is 200', () => pm.response.to.have.status(200));",
                  "pm.test('Set-Cookie contains token', () => {",
                  "  const sc = pm.response.headers.get('set-cookie') || '';",
                  "  pm.expect(sc.toLowerCase()).to.include('token=');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "GET /api/auth/whoami (User)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/auth/whoami",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "whoami"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status is 200', () => pm.response.to.have.status(200));",
                  "const j = pm.response.json();",
                  "pm.test('Has user_id', () => pm.expect(j.user_id || (j.user && j.user.user_id)).to.exist);"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "PATCH /api/auth/profile (Update name + phone)",
          "request": {
            "method": "PATCH",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"first_name\": \"Updated\",\n  \"last_name\": \"User\",\n  \"phone_number\": \"+19195551234\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/profile",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "profile"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status is 200', () => pm.response.to.have.status(200));",
                  "pm.test('Profile updated message', () => pm.expect(pm.response.json().message).to.include('Profile updated'));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "POST /api/auth/change-password",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"current_password\": \"{{test_password}}\",\n  \"new_password\": \"{{new_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/change-password",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "change-password"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status is 200', () => pm.response.to.have.status(200));",
                  "pm.test('Password changed message', () => pm.expect(pm.response.json().message).to.include('Password changed'));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "POST /api/auth/logout",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "logout"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status is 200', () => pm.response.to.have.status(200));",
                  "pm.test('Logged out message', () => pm.expect(pm.response.json().message).to.include('Logged out'));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Auth (Admin)",
      "item": [
        {
          "name": "POST /api/auth/login (Admin)",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{admin_email}}\",\n  \"password\": \"{{admin_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            }
          },
          "response": []
        },
        {
          "name": "GET /api/auth/whoami (Admin)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/auth/whoami",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "whoami"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Admin",
      "item": [
        {
          "name": "GET /api/admin/users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/admin/users",
              "host": ["{{base_url}}"],
              "path": ["api", "admin", "users"]
            }
          },
          "response": []
        },
        {
          "name": "PATCH /api/admin/users/:userId/role",
          "request": {
            "method": "PATCH",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{ \"role\": \"admin\" }"
            },
            "url": {
              "raw": "{{base_url}}/api/admin/users/{{user_id}}/role",
              "host": ["{{base_url}}"],
              "path": ["api", "admin", "users", "{{user_id}}", "role"]
            }
          },
          "response": []
        },
        {
          "name": "PATCH /api/admin/users/:userId/status",
          "request": {
            "method": "PATCH",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{ \"status\": \"active\" }"
            },
            "url": {
              "raw": "{{base_url}}/api/admin/users/{{user_id}}/status",
              "host": ["{{base_url}}"],
              "path": ["api", "admin", "users", "{{user_id}}", "status"]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "protocolProfileBehavior": {
    "disabledSystemHeaders": {}
  },
  "variable": []
}
