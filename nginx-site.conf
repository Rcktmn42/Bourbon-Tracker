# NC Bourbon Tracker - Nginx Configuration
# Place this file in: /etc/nginx/sites-available/bourbon-tracker
# Then symlink to: /etc/nginx/sites-enabled/bourbon-tracker

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=api:10m rate=20r/s;

# Upstream backend server
upstream bourbon_backend {
    server 127.0.0.1:3000 fail_timeout=5s max_fails=3;
    keepalive 32;
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name wakepour.com www.wakepour.com;
    
    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$host$request_uri;
}

# Main HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name wakepour.com www.wakepour.com;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/wakepour.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/wakepour.com/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # HSTS (optional - uncomment after testing)
    # add_header Strict-Transport-Security "max-age=63072000" always;
    
    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "origin-when-cross-origin";
    add_header Permissions-Policy "geolocation=(), camera=(), microphone=()";
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Root directory for static files
    root /opt/bourbon-tracker/web/dist;
    index index.html;
    
    # Frontend - Serve React app
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
        }
    }
    
    # API routes - Proxy to Node.js backend
    location /api/ {
        # Rate limiting
        limit_req zone=api burst=50 nodelay;
        
        proxy_pass http://bourbon_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Authentication routes - Stricter rate limiting
    location ~ ^/api/auth/(login|register|verify-email|reset-password) {
        limit_req zone=auth burst=10 nodelay;
        
        proxy_pass http://bourbon_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Shorter timeouts for auth
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }
    
    # Images - Direct serving (bypass Node.js)
    location /api/images/ {
        alias /opt/alcohol_images/;
        
        # Security headers for images
        add_header X-Content-Type-Options nosniff;
        add_header X-Served-By "nginx-direct";
        
        # Caching
        expires 7d;
        add_header Cache-Control "public";
        
        # Disable access logs for images
        access_log off;
        
        # Try to serve file, fall back to Node.js if not found
        try_files $uri @backend_images;
    }
    
    # Fallback for images not found by nginx
    location @backend_images {
        proxy_pass http://bourbon_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Health check endpoint
    location /health {
        limit_req zone=general burst=20 nodelay;
        
        proxy_pass http://bourbon_backend;
        proxy_set_header Host $host;
        
        # Short timeout for health checks
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }
    
    # Block access to sensitive files
    location ~ /\.(ht|git|env) {
        deny all;
        return 404;
    }
    
    # Block access to backup files
    location ~ \.(bak|backup|swp|tmp)$ {
        deny all;
        return 404;
    }
    
    # Custom error pages (optional)
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
    
    # Logging
    access_log /var/log/nginx/bourbon-tracker.access.log;
    error_log /var/log/nginx/bourbon-tracker.error.log;
}