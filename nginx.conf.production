user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 4096;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Client upload size limit
    client_max_body_size 10M;

    # Rate limiting zones (updated for production-readiness)
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=20r/s;

    # Upstream backend server with keepalive
    upstream bourbon_backend {
        server 127.0.0.1:3000 fail_timeout=5s max_fails=3;
        keepalive 32;
    }

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    # Default server block (fallback for unknown hosts)
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        listen 443 ssl default_server;
        listen [::]:443 ssl default_server;
        server_name _;
        ssl_reject_handshake on;
        return 444;
    }

    # HTTP to HTTPS redirect
    server {
        listen 80;
        listen [::]:80;
        server_name wakepour.com www.wakepour.com;

        # Security headers
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options DENY;
        add_header X-XSS-Protection "1; mode=block";

        return 301 https://$host$request_uri;
    }

    # Main HTTPS server (PRODUCTION)
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        http2 on;
        server_name wakepour.com www.wakepour.com;

        # SSL Certificate (using your existing cert path)
        ssl_certificate /etc/ssl/wakepour/wakepour.com.crt;
        ssl_certificate_key /etc/ssl/wakepour/wakepour.com.key;

        # Security headers
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "origin-when-cross-origin" always;
        add_header Permissions-Policy "geolocation=(), camera=(), microphone=()" always;

        # Enhanced CSP for production (adjust nonce implementation as needed)
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' https://wakepour.com;" always;

        # Logs
        access_log /var/log/nginx/bourbon-tracker.access.log;
        error_log /var/log/nginx/bourbon-tracker.error.log;

        # Root directory for BUILT static files (PRODUCTION)
        root /opt/bourbon-tracker/frontend/dist;
        index index.html;

        # Frontend - Serve built React app (SPA routing)
        location / {
            try_files $uri $uri/ /index.html;

            # Cache static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }

        # Authentication endpoints with strict rate limiting
        location ~ ^/api/auth/(login|register|verify-email|resend-verification|request-password-reset|reset-password) {
            limit_req zone=auth burst=10 nodelay;
            limit_req_status 429;

            proxy_pass http://bourbon_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_read_timeout 60s;
            proxy_connect_timeout 30s;

            # Additional security for auth endpoints
            add_header X-Robots-Tag "noindex, nofollow" always;
        }

        # Report generation endpoints with extended timeouts
        location /api/reports/ {
            limit_req zone=api burst=5 nodelay;

            proxy_pass http://bourbon_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Extended timeouts for report generation
            proxy_read_timeout 300s;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;

            # Buffer settings for large reports
            proxy_buffering on;
            proxy_buffer_size 8k;
            proxy_buffers 32 8k;
            proxy_busy_buffers_size 64k;
        }

        # Image serving - Direct from nginx (production path)
        location /api/images/ {
            alias /opt/alcohol_images/;

            # Security headers for images
            add_header X-Content-Type-Options nosniff;
            add_header X-Served-By "nginx-direct";

            # Caching
            expires 7d;
            add_header Cache-Control "public";

            # Disable access logs for images
            access_log off;

            # Security for image directory
            location ~* \.(php|pl|py|jsp|asp|sh|cgi)$ {
                deny all;
            }

            # Handle missing images gracefully
            try_files $uri =404;
        }

        # General API endpoints
        location /api/ {
            limit_req zone=api burst=50 nodelay;
            limit_req_status 429;

            proxy_pass http://bourbon_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            proxy_read_timeout 120s;
            proxy_connect_timeout 30s;
        }

        # Health check endpoint (no rate limiting)
        location /health {
            proxy_pass http://bourbon_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;

            proxy_read_timeout 10s;
            proxy_connect_timeout 5s;
            access_log off;
        }

        # Handle favicon
        location = /favicon.ico {
            expires 7d;
            log_not_found off;
            access_log off;
        }

        # Robots.txt
        location = /robots.txt {
            expires 1d;
            log_not_found off;
            access_log off;
        }

        # Block access to sensitive files
        location ~ /\.(ht|git|env) {
            deny all;
            return 404;
        }

        location ~ \.(sql|env|log|ini|conf|bak|backup|swp|tmp)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Block common exploit attempts
        location ~ /(wp-admin|wp-login|phpmyadmin|xmlrpc) {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Custom error pages
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
